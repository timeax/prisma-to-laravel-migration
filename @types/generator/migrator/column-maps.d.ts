export declare const NativeToMigrationTypeMap: {
    Text: "text";
    TinyText: "tinyText";
    MediumText: "mediumText";
    LongText: "longText";
    Char: "char";
    NChar: "char";
    CatalogSingleChar: "char";
    VarChar: "string";
    NVarChar: "string";
    String: "string";
    Xml: "text";
    NText: "text";
    Citext: "text";
    Boolean: "boolean";
    Bool: "boolean";
    Bit: "boolean";
    VarBit: "binary";
    TinyInt: "tinyInteger";
    UnsignedTinyInt: "unsignedTinyInteger";
    SmallInt: "smallInteger";
    UnsignedSmallInt: "unsignedSmallInteger";
    MediumInt: "mediumInteger";
    UnsignedMediumInt: "unsignedMediumInteger";
    Int2: "smallInteger";
    Int4: "integer";
    Int8: "bigInteger";
    Integer: "integer";
    Int: "integer";
    BigInt: "bigInteger";
    Long: "bigInteger";
    Oid: "integer";
    UnsignedInt: "unsignedInteger";
    UnsignedBigInt: "unsignedBigInteger";
    Float4: "float";
    Float8: "double";
    Float: "float";
    Double: "double";
    DoublePrecision: "double";
    Real: "double";
    Decimal: "decimal";
    Money: "decimal";
    SmallMoney: "decimal";
    Date: "date";
    Time: "time";
    Timetz: "timeTz";
    Timestamp: "timestamp";
    Timestamptz: "timestampsTz";
    DateTime: "timestamp";
    DateTime2: "dateTime";
    SmallDateTime: "dateTime";
    DateTimeOffset: "dateTimeTz";
    Year: "year";
    Json: "json";
    JsonB: "jsonb";
    ByteA: "binary";
    Binary: "binary";
    VarBinary: "binary";
    TinyBlob: "binary";
    Blob: "binary";
    MediumBlob: "binary";
    LongBlob: "binary";
    BinData: "binary";
    Image: "binary";
    Bytes: "binary";
    Uuid: "uuid";
    UniqueIdentifier: "uuid";
    ObjectId: "string";
    Inet: "ipAddress";
};
export declare function getType(type: string): ValueOf<typeof NativeToMigrationTypeMap>;
